{"version":3,"sources":["Components/LineChart.js","Components/SideInfoBar.js","Components/WorldChart.js","all-countries.js","Components/Filters.js","App.js","serviceWorker.js","index.js"],"names":["LineChart","filterValues","title","height","rawData","isLoading","useState","xAxisData","yAxisData","axisData","setAxisData","getLineColor","name","fetchData","a","console","log","formatXData","data","xTimestamps","map","timestamp","DateTime","fromISO","toLocaleString","month","day","formatYData","xLabels","ySerieName","ySeries","push","series","markArea","xAxis","length","extrapolatedDays","yData","useEffect","chartOptions","type","yAxis","isLogarithmic","legend","filter","selected","itemStyle","color","lineStyle","width","smooth","tooltip","trigger","axisPointer","label","backgroundColor","dataZoom","handleIcon","handleSize","handleStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","toolTipContent","href","target","rel","spinning","size","hoverable","extra","placement","content","option","notMerge","lazyUpdate","style","Title","Typography","SideInfoBar","cardStyle","marginBottom","deaths","curr","extr","confirmed","recovered","active","summaries","setSummaries","Deaths","_summaries","Confirmed","Recovered","Active","transformData","loading","level","Option","Select","require","WorldChart","setFilterValues","selectedMetric","setSelectedMetric","isExtrapolated","setIsExtrapolated","isSocialDistancing","setIsSocialDistancing","countryData","setCountryData","maxValue","setMaxValue","setIsLoading","show","visualMap","left","min","max","inRange","text","calculable","emphasis","roam","nameProperty","doc","country","value","extrapolated_metric_value","metric_value","axios","get","params","extrapolation_days","metric","toLowerCase","maxCurr","_","maxBy","maxExtr","message","timer","setTimeout","clearTimeout","onChartEvents","click","e","selectedCountries","onChange","checked","disabled","placeholder","key","onEvents","Filters","gutter","span","Item","mode","allCountries","layout","excludedCountries","defaultValue","Header","Layout","Content","App","setRawData","selected_countries","join","undefined","excluded_countries","error","className","paddingLeft","paddingRight","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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,UAAU,EACVC,YAAY,EACZC,MAAO,CAAE1E,SAAQ8C,MAAO,QACxByG,SAAUT,O,0BC3JL,GACb,WACA,QACA,YACA,QACA,WACA,SACA,YACA,WACA,YACA,UACA,UACA,uBACA,cACA,QACA,QACA,SACA,QACA,UACA,QACA,UACA,OACA,OACA,cACA,UACA,SACA,UACA,UACA,cACA,UACA,SACA,WACA,SACA,UACA,SACA,kBACA,SACA,UACA,UACA,aACA,UACA,UACA,YACA,SACA,cACA,UACA,UACA,aACA,SACA,QACA,UACA,aACA,UACA,qBACA,YACA,WACA,UACA,SACA,UACA,eACA,UACA,YACA,QACA,SACA,UACA,UACA,gBACA,SACA,UACA,yBACA,WACA,eACA,SACA,WACA,WACA,aACA,OACA,SACA,WACA,OACA,QACA,aACA,WACA,WACA,aACA,WACA,UACA,SACA,SACA,KACA,eACA,WACA,WACA,SACA,QACA,OACA,eACA,SACA,cACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,WACA,iBACA,mBACA,gBACA,UACA,SACA,OACA,SACA,aACA,WACA,QACA,SACA,QACA,sBACA,UACA,QACA,UACA,aACA,sBACA,YACA,WACA,QACA,YACA,aACA,SACA,cACA,mCACA,WACA,SACA,2BACA,sBACA,oBACA,aACA,cACA,QACA,UACA,UACA,WACA,WACA,aACA,aACA,YACA,SACA,WACA,cACA,eACA,OACA,cACA,OACA,YACA,aACA,QACA,SACA,aACA,QACA,mBACA,WACA,aACA,aACA,UACA,UCnKM9C,EAAWC,IAAXD,OAgGOwD,EA9FC,SAAC,GAAuC,IAArC1J,EAAoC,EAApCA,aAAcsG,EAAsB,EAAtBA,gBAM/B,OACE,kBAAC,IAAD,CAAMjC,WAAS,EAACD,KAAK,SACnB,kBAAC,IAAD,CAAKuF,OAAQ,IACX,kBAAC,IAAD,CAAKC,KAAM,GACT,kBAAC,IAAD,CAAMhF,MAAO,CAAE5B,MAAO,SACpB,kBAAC,IAAK6G,KAAN,CAAWxG,MAAM,sBAAsBuB,MATnC,CACZK,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","file":"static/js/main.56f02279.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\nimport ReactEcharts from 'echarts-for-react'\nimport { Card, Spin, Popover, Button } from 'antd'\nimport { DateTime } from 'luxon'\n\nconst LineChart = ({\n  filterValues,\n  title,\n  height = 500,\n  rawData,\n  isLoading\n}) => {\n  const [axisData, setAxisData] = useState({\n    xAxisData: [],\n    yAxisData: []\n  })\n\n  const getLineColor = name => {\n    if (name === 'Deaths') {\n      return '#820014'\n    } else if (name === 'Recovered') {\n      return '#52c41a'\n    } else if (name === 'Active') {\n      return '#f5222d'\n    } else if (name === 'Confirmed') {\n      return '#fadb14'\n    } else if (name === 'Extrapolation') {\n      return '#bfbfbf'\n    }\n  }\n\n  const fetchData = async () => {\n    if (!rawData) return\n    console.log('fetching data')\n    const formatXData = data => {\n      console.log('formatting xData')\n      const xLabels = data.xTimestamps.map(timestamp => {\n        const date = DateTime.fromISO(timestamp)\n        return date.toLocaleString({ month: 'short', day: 'numeric' })\n      })\n      return xLabels\n    }\n\n    console.log('filterValues: ', filterValues)\n\n    const formatYData = (data, xLabels) => {\n      const yAxisData = []\n      for (const ySerieName in data.ySeries) {\n        yAxisData.push({\n          name: ySerieName,\n          series: data.ySeries[ySerieName]\n        })\n      }\n      yAxisData.push({\n        name: 'Extrapolation',\n        series: [],\n        markArea: [\n          [\n            {\n              name: 'Extrapolation',\n              xAxis: xLabels[xLabels.length - filterValues.extrapolatedDays]\n            },\n            {\n              xAxis: xLabels[xLabels.length - 1]\n            }\n          ]\n        ]\n      })\n      console.log('yAxisData: ', yAxisData)\n      return yAxisData\n    }\n\n    // const { data } = await axios.get('http://localhost:8080/all', {\n    //   params: {\n    //     extrapolation_days: filterValues.extrapolatedDays\n    //   }\n    // })\n    // const data = getLocalData()\n    const data = rawData\n    console.log('data: ', data)\n    console.log('formatXData')\n    const xLabels = formatXData(data)\n    console.log('formatYData')\n    const yData = formatYData(data, xLabels)\n    const axisData = {\n      xAxisData: xLabels,\n      yAxisData: yData\n    }\n    console.log('axisData: ', axisData)\n    setAxisData(axisData)\n  }\n\n  useEffect(() => {\n    fetchData()\n    // eslint-disable-next-line\n  }, [rawData])\n\n  const chartOptions = {\n    xAxis: {\n      type: 'category',\n      data: axisData.xAxisData\n    },\n    yAxis: {\n      type: filterValues.isLogarithmic ? 'log' : 'value'\n    },\n    legend: {\n      data: axisData.yAxisData\n        .map(({ name }) => name)\n        .filter(name => name !== 'timestamp' && name !== 'Extrapolation'),\n      selected: {\n        'Estimated confirmed 0.5%': false,\n        'Estimated confirmed 4.0%': false\n      }\n    },\n    series: axisData.yAxisData.map(({ series, markArea, name }) => ({\n      name,\n      itemStyle: {\n        color: getLineColor(name)\n      },\n      lineStyle: {\n        width: 3,\n        color: getLineColor(name)\n      },\n      data: series,\n      markArea: {\n        data: markArea\n      },\n      type: 'line',\n      smooth: true\n    })),\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross',\n        label: {\n          backgroundColor: '#6a7985'\n        }\n      }\n    },\n    // visualMap: {\n    //   type: 'continuous',\n    //   show: false,\n    //   dimension: 0,\n    //   pieces: [\n    //     {\n    //       gte: '15-03-2020',\n    //       color: 'green'\n    //     }\n    //   ]\n    // },\n    dataZoom: [\n      {\n        type: 'inside'\n        // start: 0,\n        // end: 10\n      },\n      {\n        // start: 0,\n        // end: 10,\n        handleIcon:\n          'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n        handleSize: '80%',\n        handleStyle: {\n          color: '#fff',\n          shadowBlur: 3,\n          shadowColor: 'rgba(0, 0, 0, 0.6)',\n          shadowOffsetX: 2,\n          shadowOffsetY: 2\n        }\n      }\n    ]\n  }\n\n  const toolTipContent = (\n    <Fragment>\n      <p>\n        <b>Estimated Confirmed:</b>\n      </p>\n      is calculated by taking the deaths as a base value and calculating the\n      <br />\n      number of infected by using a deathrate of 0.5% or 4.0%. This shows a more\n      <br />\n      realistic number of infections, since the number of deaths is the most\n      <br />\n      reliable number. Click on the metric on top of the chart to see the\n      values.\n      <br />\n      <br />\n      Inspiration for this dashboard:{' '}\n      <a\n        href=\"https://medium.com/@tomaspueyo/coronavirus-act-today-or-people-will-die-f4d3d9cd99ca\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Article\n      </a>\n    </Fragment>\n  )\n\n  return (\n    <Fragment>\n      <Spin spinning={isLoading} size=\"large\">\n        <Card\n          hoverable\n          title=\"Infections and deaths of all countries\"\n          size=\"small\"\n          extra={\n            <Popover\n              placement=\"leftTop\"\n              title=\"Metrics Help\"\n              content={toolTipContent}\n              trigger=\"hover\"\n            >\n              <Button size=\"small\">Metrics Help</Button>\n            </Popover>\n          }\n        >\n          <ReactEcharts\n            option={chartOptions}\n            notMerge={true}\n            lazyUpdate={true}\n            style={{ height, width: '100%' }}\n          />\n        </Card>\n      </Spin>\n    </Fragment>\n  )\n}\n\nexport default LineChart\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { Row, Card, Typography } from 'antd'\nconst { Title } = Typography\n\nconst SideInfoBar = ({ rawData, isLoading, filterValues }) => {\n  const cardStyle = {\n    width: '100%',\n    marginBottom: '.5em'\n  }\n  const style = {\n    marginBottom: 0\n  }\n\n  const [summaries, setSummaries] = useState({\n    deaths: { curr: 0, extr: 0 },\n    confirmed: { curr: 0, extr: 0 },\n    recovered: { curr: 0, extr: 0 },\n    active: { curr: 0, extr: 0 }\n  })\n\n  const transformData = () => {\n    const { ySeries } = rawData\n    const length = ySeries.Deaths.length\n    const _summaries = {\n      deaths: {\n        curr: ySeries.Deaths[\n          length - filterValues.extrapolatedDays\n        ].toLocaleString(),\n        extr: ySeries.Deaths[length - 1].toLocaleString()\n      },\n      confirmed: {\n        curr: ySeries.Confirmed[\n          length - filterValues.extrapolatedDays\n        ].toLocaleString(),\n        extr: ySeries.Confirmed[length - 1].toLocaleString()\n      },\n      recovered: {\n        curr: ySeries.Recovered[\n          length - filterValues.extrapolatedDays\n        ].toLocaleString()\n      },\n      active: {\n        curr: ySeries.Active[\n          length - filterValues.extrapolatedDays\n        ].toLocaleString()\n      }\n    }\n    setSummaries(_summaries)\n  }\n\n  useEffect(() => {\n    if (!rawData) return\n    transformData()\n    // eslint-disable-next-line\n  }, [rawData])\n\n  return (\n    <Fragment>\n      <Row>\n        <Card\n          title=\"Total Infections\"\n          hoverable\n          size=\"small\"\n          style={cardStyle}\n          loading={isLoading}\n        >\n          <p style={style}>Current:</p>\n          <Title type=\"danger\" level={3} style={style}>\n            {summaries.confirmed.curr}\n          </Title>\n          <p style={style}>With extrapolation:</p>\n          <Title type=\"danger\" level={3} style={style}>\n            {summaries.confirmed.extr}\n          </Title>\n        </Card>\n      </Row>\n      <Row>\n        <Card\n          title=\"Total Deaths\"\n          hoverable\n          size=\"small\"\n          style={cardStyle}\n          loading={isLoading}\n        >\n          <p style={style}>Current:</p>\n          <Title type=\"danger\" level={3} style={style}>\n            {summaries.deaths.curr}\n          </Title>\n          <p style={style}>With extrapolation:</p>\n          <Title type=\"danger\" level={3} style={style}>\n            {summaries.deaths.extr}\n          </Title>\n        </Card>\n      </Row>\n      <Row>\n        <Card\n          title=\"Active\"\n          hoverable\n          size=\"small\"\n          style={cardStyle}\n          loading={isLoading}\n        >\n          <Title type=\"primary\" level={3} style={style}>\n            {summaries.active.curr}\n          </Title>\n        </Card>\n      </Row>\n      <Row>\n        <Card\n          title=\"Recovered\"\n          hoverable\n          size=\"small\"\n          style={cardStyle}\n          loading={isLoading}\n        >\n          <Title type=\"primary\" level={3} style={style}>\n            {summaries.recovered.curr}\n          </Title>\n        </Card>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default SideInfoBar\n","import React, { Fragment, useState, useEffect } from 'react'\nimport ReactEcharts from 'echarts-for-react'\nimport { Card, Select, Switch, Spin } from 'antd'\nimport axios from 'axios'\nimport _ from 'lodash'\nconst { Option } = Select\nrequire('echarts/map/js/world.js')\n\nconst WorldChart = ({ filterValues, setFilterValues, height = 700 }) => {\n  const metrics = ['Active', 'Confirmed', 'Deaths', 'Recovered']\n  const [selectedMetric, setSelectedMetric] = useState('Confirmed')\n  const [isExtrapolated, setIsExtrapolated] = useState(false)\n  const [isSocialDistancing, setIsSocialDistancing] = useState(false)\n  const [countryData, setCountryData] = useState([])\n  const [maxValue, setMaxValue] = useState({ extr: 10, curr: 10 })\n  const [isLoading, setIsLoading] = useState(false)\n\n  const chartOptions = {\n    tooltip: { show: true },\n    visualMap: {\n      left: 'right',\n      min: 1,\n      max: isExtrapolated ? maxValue.extr : maxValue.curr,\n      inRange: {\n        color: [\n          '#313695',\n          '#4575b4',\n          '#74add1',\n          '#abd9e9',\n          '#e0f3f8',\n          '#ffffbf',\n          '#fee090',\n          '#fdae61',\n          '#f46d43',\n          '#d73027',\n          '#a50026'\n        ]\n      },\n      text: ['High', 'Low'], // 文本，默认为数值文本\n      calculable: true\n    },\n    series: [\n      {\n        name: selectedMetric,\n        type: 'map',\n        // itemStyle: {\n        //   color: 'purple'\n        // },\n        emphasis: {\n          label: {\n            show: true\n          }\n        },\n        map: 'world',\n        // coordinateSystem: 'geo',\n        roam: true,\n        nameProperty: 'NAME',\n        // symbolSize: data => Math.max(5, data[2] / 5),\n        // symbolSize: 2000,\n        // data: [\n        //   { name: 'Germany', value: 15000 },\n        //   { name: 'Italy', value: 40000 }\n        // ],\n        data: countryData.map(doc => ({\n          name: doc.country === 'US' ? 'United States' : doc.country,\n          value: isExtrapolated\n            ? doc.extrapolated_metric_value\n            : doc.metric_value\n        }))\n      }\n    ]\n  }\n\n  const fetchData = async () => {\n    try {\n      setIsLoading(true)\n      const { data } = await axios.get('http://localhost:8080/by_country', {\n        params: {\n          extrapolation_days: filterValues.extrapolatedDays,\n          metric: selectedMetric.toLowerCase()\n        }\n      })\n      setCountryData(data)\n      const maxCurr = _.maxBy(data, 'metric_value').metric_value\n      const maxExtr = _.maxBy(data, 'extrapolated_metric_value')\n        .extrapolated_metric_value\n      setMaxValue({\n        curr: maxCurr,\n        extr: maxExtr\n      })\n      setIsLoading(false)\n    } catch (err) {\n      console.log('Err fetching data by_country: ', err.message)\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      fetchData()\n    }, 1000)\n    return () => clearTimeout(timer)\n    // eslint-disable-next-line\n  }, [selectedMetric, filterValues.extrapolatedDays])\n\n  const onChartEvents = {\n    click: e => {\n      console.log('e.name: ', e.name)\n      let name = e.name\n      if (name === 'United States') name = 'US'\n      setFilterValues({\n        ...filterValues,\n        selectedCountries: [name]\n      })\n    }\n  }\n\n  return (\n    <Spin spinning={isLoading} size=\"large\">\n      <Card\n        hoverable\n        title=\"World Map\"\n        size=\"small\"\n        extra={\n          <Fragment>\n            Extrapolated:&nbsp;&nbsp;\n            <Switch\n              onChange={value => setIsExtrapolated(value)}\n              checked={isExtrapolated}\n            />\n            &nbsp;&nbsp;Social Distancing:&nbsp;&nbsp;\n            <Switch\n              onChange={value => setIsSocialDistancing(value)}\n              checked={isSocialDistancing}\n              disabled={!isExtrapolated}\n            />\n            &nbsp;&nbsp; Select Metric:&nbsp;&nbsp;\n            <Select\n              placeholder=\"Select metric...\"\n              onChange={value => setSelectedMetric(value)}\n              value={selectedMetric}\n              style={{ width: '10em' }}\n            >\n              {metrics.map(metric => (\n                <Option key={metric}>{metric}</Option>\n              ))}\n            </Select>\n          </Fragment>\n        }\n      >\n        <ReactEcharts\n          option={chartOptions}\n          notMerge={true}\n          lazyUpdate={true}\n          style={{ height, width: '100%' }}\n          onEvents={onChartEvents}\n        />\n      </Card>\n    </Spin>\n  )\n}\n\nexport default WorldChart\n","export default [\n  'Thailand',\n  'Japan',\n  'Singapore',\n  'Nepal',\n  'Malaysia',\n  'Canada',\n  'Australia',\n  'Cambodia',\n  'Sri,Lanka',\n  'Germany',\n  'Finland',\n  'United,Arab,Emirates',\n  'Philippines',\n  'India',\n  'Italy',\n  'Sweden',\n  'Spain',\n  'Belgium',\n  'Egypt',\n  'Lebanon',\n  'Iraq',\n  'Oman',\n  'Afghanistan',\n  'Bahrain',\n  'Kuwait',\n  'Algeria',\n  'Croatia',\n  'Switzerland',\n  'Austria',\n  'Israel',\n  'Pakistan',\n  'Brazil',\n  'Georgia',\n  'Greece',\n  'North,Macedonia',\n  'Norway',\n  'Romania',\n  'Estonia',\n  'San,Marino',\n  'Belarus',\n  'Iceland',\n  'Lithuania',\n  'Mexico',\n  'New,Zealand',\n  'Nigeria',\n  'Ireland',\n  'Luxembourg',\n  'Monaco',\n  'Qatar',\n  'Ecuador',\n  'Azerbaijan',\n  'Armenia',\n  'Dominican,Republic',\n  'Indonesia',\n  'Portugal',\n  'Andorra',\n  'Latvia',\n  'Morocco',\n  'Saudi,Arabia',\n  'Senegal',\n  'Argentina',\n  'Chile',\n  'Jordan',\n  'Ukraine',\n  'Hungary',\n  'Liechtenstein',\n  'Poland',\n  'Tunisia',\n  'Bosnia,and,Herzegovina',\n  'Slovenia',\n  'South,Africa',\n  'Bhutan',\n  'Cameroon',\n  'Colombia',\n  'Costa,Rica',\n  'Peru',\n  'Serbia',\n  'Slovakia',\n  'Togo',\n  'Malta',\n  'Martinique',\n  'Bulgaria',\n  'Maldives',\n  'Bangladesh',\n  'Paraguay',\n  'Albania',\n  'Cyprus',\n  'Brunei',\n  'US',\n  'Burkina,Faso',\n  'Holy,See',\n  'Mongolia',\n  'Panama',\n  'China',\n  'Iran',\n  'Korea,,South',\n  'France',\n  'Cruise,Ship',\n  'Denmark',\n  'Czechia',\n  'Taiwan*',\n  'Vietnam',\n  'Russia',\n  'Moldova',\n  'Bolivia',\n  'Honduras',\n  'United,Kingdom',\n  'Congo,(Kinshasa)',\n  \"Cote,d'Ivoire\",\n  'Jamaica',\n  'Turkey',\n  'Cuba',\n  'Guyana',\n  'Kazakhstan',\n  'Ethiopia',\n  'Sudan',\n  'Guinea',\n  'Kenya',\n  'Antigua,and,Barbuda',\n  'Uruguay',\n  'Ghana',\n  'Namibia',\n  'Seychelles',\n  'Trinidad,and,Tobago',\n  'Venezuela',\n  'Eswatini',\n  'Gabon',\n  'Guatemala',\n  'Mauritania',\n  'Rwanda',\n  'Saint,Lucia',\n  'Saint,Vincent,and,the,Grenadines',\n  'Suriname',\n  'Kosovo',\n  'Central,African,Republic',\n  'Congo,(Brazzaville)',\n  'Equatorial,Guinea',\n  'Uzbekistan',\n  'Netherlands',\n  'Benin',\n  'Liberia',\n  'Somalia',\n  'Tanzania',\n  'Barbados',\n  'Montenegro',\n  'Kyrgyzstan',\n  'Mauritius',\n  'Zambia',\n  'Djibouti',\n  'Gambia,,The',\n  'Bahamas,,The',\n  'Chad',\n  'El,Salvador',\n  'Fiji',\n  'Nicaragua',\n  'Madagascar',\n  'Haiti',\n  'Angola',\n  'Cabo,Verde',\n  'Niger',\n  'Papua,New,Guinea',\n  'Zimbabwe',\n  'Cape,Verde',\n  'East,Timor',\n  'Eritrea',\n  'Uganda'\n]\n","import React from 'react'\nimport { Select, Row, Col, Form, Card, Switch, InputNumber } from 'antd'\nimport allCountries from '../all-countries'\nconst { Option } = Select\n\nconst Filters = ({ filterValues, setFilterValues }) => {\n  const size = 'small'\n  const style = {\n    marginBottom: 0,\n    width: '100%'\n  }\n  return (\n    <Card hoverable size=\"small\">\n      <Row gutter={16}>\n        <Col span={8}>\n          <Form style={{ width: '100%' }}>\n            <Form.Item label=\"Filter by Countries\" style={style}>\n              <Select\n                mode=\"multiple\"\n                style={{ width: '100%' }}\n                placeholder=\"Filter by Countries...\"\n                onChange={value =>\n                  setFilterValues({\n                    ...filterValues,\n                    selectedCountries: value\n                  })\n                }\n                value={filterValues.selectedCountries}\n                size={size}\n              >\n                {allCountries.map(country => (\n                  <Option key={country}>{country}</Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={8}>\n          <Form layout=\"inline\" style={{ width: '100%' }}>\n            <Form.Item label=\"Exclude Countries\" style={{ width: '100%' }}>\n              <Select\n                mode=\"multiple\"\n                style={{ width: '100%' }}\n                placeholder=\"Exclude Countries...\"\n                onChange={value =>\n                  setFilterValues({\n                    ...filterValues,\n                    excludedCountries: value\n                  })\n                }\n                value={filterValues.excludedCountries}\n                size={size}\n              >\n                {allCountries.map(country => (\n                  <Option key={country}>{country}</Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={3}>\n          <Form layout=\"inline\" style={{ width: '100%' }}>\n            <Form.Item label=\"Logarithmic\" style={{ width: '100%' }}>\n              <Switch\n                onChange={value =>\n                  setFilterValues({\n                    ...filterValues,\n                    isLogarithmic: value\n                  })\n                }\n                checked={filterValues.isLogarithmic}\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={5}>\n          <Form layout=\"inline\" style={{ width: '100%' }}>\n            <Form.Item label=\"Extrapolated days\" style={{ width: '100%' }}>\n              <InputNumber\n                size={size}\n                min={0}\n                max={30}\n                defaultValue={3}\n                onChange={value =>\n                  setFilterValues({\n                    ...filterValues,\n                    extrapolatedDays: value\n                  })\n                }\n                value={filterValues.extrapolatedDays}\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Filters\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport { Layout } from 'antd'\nimport LineChart from './Components/LineChart.js'\nimport SideInfoBar from './Components/SideInfoBar.js'\nimport WorldChart from './Components/WorldChart.js'\nimport Filters from './Components/Filters.js'\nimport { Row, Col } from 'antd'\nimport axios from 'axios'\nimport qs from 'qs'\nconst { Header, Content } = Layout\n\nfunction App() {\n  const [filterValues, setFilterValues] = useState({\n    selectedCountries: [],\n    excludedCountries: [],\n    isLogarithmic: false,\n    extrapolatedDays: 7\n  })\n\n  const [rawData, setRawData] = useState()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const fetchData = async () => {\n    console.log('fetching data from server')\n    try {\n      if (!filterValues.extrapolatedDays) return\n      setIsLoading(true)\n      const {\n        selectedCountries,\n        excludedCountries,\n        extrapolatedDays\n      } = filterValues\n      const params = {\n        extrapolation_days: extrapolatedDays,\n        selected_countries: selectedCountries.length\n          ? selectedCountries.join(',')\n          : undefined,\n        excluded_countries: excludedCountries.length\n          ? excludedCountries.join(',')\n          : undefined\n      }\n      console.log('params: ', params)\n      const { data } = await axios.get('http://localhost:8080/all', {\n        params\n        // paramsSerializer: params => {\n        //   return qs.stringify(params)\n        // }\n      })\n      console.log('got data from server: ', data)\n      setRawData(data)\n      setIsLoading(false)\n    } catch (err) {\n      console.error('Error while fetching data: ', err.message)\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      fetchData()\n    }, 1000)\n    return () => clearTimeout(timer)\n    // eslint-disable-next-line\n  }, [\n    filterValues.extrapolatedDays,\n    filterValues.selectedCountries,\n    filterValues.excludedCountries\n  ])\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Content style={{ height: '98vh' }}>\n          <Header>\n            <h1 style={{ color: 'white' }}>\n              Coronavirus Forecasts (Please stay at home and save lives)\n            </h1>\n          </Header>\n          <Row style={{ height: '.5em' }}></Row>\n          <Row\n            gutter={24}\n            style={{ paddingLeft: '.5em', paddingRight: '.5em' }}\n          >\n            <Col span={24}>\n              <Filters\n                filterValues={filterValues}\n                setFilterValues={setFilterValues}\n              />\n            </Col>\n          </Row>\n          <Row style={{ height: '.5em' }}></Row>\n          <Row gutter={8} style={{ paddingLeft: '.5em', paddingRight: '.5em' }}>\n            <Col span={4}>\n              <SideInfoBar\n                rawData={rawData}\n                filterValues={filterValues}\n                isLoading={isLoading}\n              ></SideInfoBar>\n            </Col>\n            <Col span={20}>\n              <LineChart\n                filterValues={filterValues}\n                rawData={rawData}\n                isLoading={isLoading}\n              ></LineChart>\n            </Col>\n          </Row>\n          <Row style={{ height: '.5em' }}></Row>\n          <Row gutter={8} style={{ paddingLeft: '.5em', paddingRight: '.5em' }}>\n            <Col span={24}>\n              <WorldChart\n                filterValues={filterValues}\n                setFilterValues={setFilterValues}\n              ></WorldChart>\n            </Col>\n          </Row>\n        </Content>\n      </Layout>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}