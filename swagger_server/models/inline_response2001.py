# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InlineResponse2001(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, country: str=None, metric_value: int=None, extrapolated_metric_value: int=None):  # noqa: E501
        """InlineResponse2001 - a model defined in Swagger

        :param country: The country of this InlineResponse2001.  # noqa: E501
        :type country: str
        :param metric_value: The metric_value of this InlineResponse2001.  # noqa: E501
        :type metric_value: int
        :param extrapolated_metric_value: The extrapolated_metric_value of this InlineResponse2001.  # noqa: E501
        :type extrapolated_metric_value: int
        """
        self.swagger_types = {
            'country': str,
            'metric_value': int,
            'extrapolated_metric_value': int
        }

        self.attribute_map = {
            'country': 'country',
            'metric_value': 'metric_value',
            'extrapolated_metric_value': 'extrapolated_metric_value'
        }
        self._country = country
        self._metric_value = metric_value
        self._extrapolated_metric_value = extrapolated_metric_value

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2001':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_1 of this InlineResponse2001.  # noqa: E501
        :rtype: InlineResponse2001
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self) -> str:
        """Gets the country of this InlineResponse2001.


        :return: The country of this InlineResponse2001.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country: str):
        """Sets the country of this InlineResponse2001.


        :param country: The country of this InlineResponse2001.
        :type country: str
        """

        self._country = country

    @property
    def metric_value(self) -> int:
        """Gets the metric_value of this InlineResponse2001.


        :return: The metric_value of this InlineResponse2001.
        :rtype: int
        """
        return self._metric_value

    @metric_value.setter
    def metric_value(self, metric_value: int):
        """Sets the metric_value of this InlineResponse2001.


        :param metric_value: The metric_value of this InlineResponse2001.
        :type metric_value: int
        """

        self._metric_value = metric_value

    @property
    def extrapolated_metric_value(self) -> int:
        """Gets the extrapolated_metric_value of this InlineResponse2001.


        :return: The extrapolated_metric_value of this InlineResponse2001.
        :rtype: int
        """
        return self._extrapolated_metric_value

    @extrapolated_metric_value.setter
    def extrapolated_metric_value(self, extrapolated_metric_value: int):
        """Sets the extrapolated_metric_value of this InlineResponse2001.


        :param extrapolated_metric_value: The extrapolated_metric_value of this InlineResponse2001.
        :type extrapolated_metric_value: int
        """

        self._extrapolated_metric_value = extrapolated_metric_value
